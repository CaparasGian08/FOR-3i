const int BUTTON_PIN = 3;
const int RELAY_PIN = 9;
const int LED_LOCKED_PIN = 10;
const int LED_UNLOCKED_PIN = 11;
const int SPEAKER_PIN = 6; // Connect your speaker to this pin

const int DOT_DURATION = 200; // Adjust dot duration as needed
const int DASH_DURATION = 600; // Adjust dash duration as needed
const int INTER_ELEMENT_DELAY = 200; // Adjust delay between dots and dashes as needed
const int INTER_CHARACTER_DELAY = 600; // Adjust delay between characters as needed
const int PRESS = HIGH;
const int NOPRESS = LOW;

bool isOpen = false;
unsigned int storageIndex = 0;
int storage[10];
int combinationUpper[10] = { 200, 200, 200, 100, 200, 200, 100, 100, 200, 100 };

void setup() {
  Serial.begin(9600);
  pinMode(BUTTON_PIN, INPUT);
  pinMode(RELAY_PIN, OUTPUT);
  pinMode(LED_LOCKED_PIN, OUTPUT);
  pinMode(LED_UNLOCKED_PIN, OUTPUT);
}

void loop() {
  unsigned int pressCount = 0;
  unsigned int noPressCount = 0;

  if (digitalRead(BUTTON_PIN) == PRESS) {
    tone(SPEAKER_PIN, 1000, 100); // Generate a short beep
    delay(200); // Wait for debounce
    while (digitalRead(BUTTON_PIN) == PRESS) {
      pressCount += 1;
      delay(5);
    }
  }

  if (digitalRead(BUTTON_PIN) == NOPRESS && pressCount > 0) {
    storage[storageIndex] = pressCount;
    Serial.print("index and value: ");
    Serial.println(storageIndex);
    Serial.println(pressCount);
    storageIndex += 1;

    if (check() == 10) {
      isOpen = true;
      digitalWrite(RELAY_PIN, HIGH); // Activate the relay to unlock the solenoid
      digitalWrite(LED_UNLOCKED_PIN, HIGH); // Turn on the LED to indicate unlocked
      digitalWrite(LED_LOCKED_PIN, LOW); // Turn off the LED to indicate locked
      tone(SPEAKER_PIN, 1000, 1000); // Generate a 1 kHz tone for 1 second
      Serial.println("Open!");
      delay(5000); // Lock the box after 5 seconds
      digitalWrite(RELAY_PIN, LOW); // Deactivate the relay to lock the box
      digitalWrite(LED_UNLOCKED_PIN, LOW); // Turn off the LED to indicate locked
      digitalWrite(LED_LOCKED_PIN, HIGH); // Turn on the LED to indicate locked
      isOpen = false; // Update lock status
    }

    // Reset pressCount after processing input
    pressCount = 0;
  }

  // Your existing code for handling noPressCount and other functionalities goes here...
}
